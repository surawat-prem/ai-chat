name: Build and deploy on Microservices Change - (non-prod)

on:
  push:
    branches:
      - non-prod
    paths:
      - 'microservices/**'

jobs:
  check-service-changes:
    runs-on: ubuntu-latest
    
    outputs:
      services: ${{ steps.services.outputs.changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'non-prod'
        
      - uses: dorny/paths-filter@v3
        id: services
        with:
            filters: |
              chat-backend: microservices/chat-backend/**
              chat-fe: microservices/chat-fe/**
              chat-server: microservices/chat-server/**

  create-common-tag:
    needs: check-service-changes
    runs-on: ubuntu-latest
    if: needs.check-service-changes.outputs.services != ''
    outputs:
      dockerTag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - id: set-tag
        run: |
          DATE=$(date +'%Y%m%d')
          RANDOM_NUMBER=$(( RANDOM % 1000 ))
          TAG="${DATE}-${RANDOM_NUMBER}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "::set-output name=tag::${TAG}"

  build-and-push:
    needs: 
      - check-service-changes
      - create-common-tag
    if: needs.check-service-changes.outputs.services != ''
    strategy:
        matrix:
          service: ${{ fromJson(needs.check-service-changes.outputs.services) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'non-prod'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          cd ./microservices/${{ matrix.service }}
          docker build --platform=linux/arm64 -t surawatprem/${{ matrix.service }}:${{ needs.create-common-tag.outputs.dockerTag }} -f ./docker/Dockerfile .
          docker push surawatprem/${{ matrix.service }}:${{ needs.create-common-tag.outputs.dockerTag }}

  commit-and-push:
    needs: 
      - check-service-changes
      - build-and-push
      - create-common-tag
    if: needs.check-service-changes.outputs.services != ''
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'non-prod'

      - name: Commit changes
        run: |
          echo '${{ needs.check-service-changes.outputs.services }}' | jq -r '.[]' | while read service; do
            sed -i "s|newTag: .*|newTag: ${{ needs.create-common-tag.outputs.dockerTag }}|" ./app-deployment/overlay/non-prod/$service/kustomization.yaml
          done

          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add ./app-deployment/**
          git commit -m "Update kustomization.yaml with new tag : ${{ needs.create-common-tag.outputs.dockerTag }}"
          git push origin non-prod